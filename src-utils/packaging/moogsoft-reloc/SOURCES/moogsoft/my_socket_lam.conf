#############################################################
#              Copyright (c) Moogsoft Inc 2015              #
#                                                           #
#-----------------------------------------------------------#
#                                                           #
# The contents of this configuration file may be copied,    #
# amended and used to create derivative works.              #
#                                                           #
#############################################################

#------------------------------------------------------------
# Essential configuration for the socket lam
#------------------------------------------------------------
{
	config :
	{
		zone: "PHIL",
		"control channel":
		{
			"Multicast Address" : "225.0.0.1",
			"Port Number"		: 9001
		},
		#----------------------------------------
		# Define the object to be monitored
		#----------------------------------------
		monitor:
		{
            name        : "Socket Monitor",
            class       : "CSockMonitor",
            mode        : "SERVER",
			address		: "localhost",
			port		: 8411
		},
		#----------------------------------------
		# LAM identification
		#----------------------------------------
		agent:
		{
            #---------------------------------------------
            # The agent name appears as $LamInstanceName
            # in the mapping rules below
            #---------------------------------------------
			name	                : "GENERIC_SOCKET",
			log			            : "/usr/share/r_moogsoft/data/log/moogsoft/socket_lam_raw_data.log",
            exit_after_initial_load : false
			#loadfile	            : "./historical.log"
		},
        parsing:
        {
            start:      ["UPDATE: "],
            end:        ["\n"],
            #
            # By setting ignoreQuotes to true
            # quotes between delimiters are treated
            # as regular characters, and not used to
            # delimit tokens
            # so DL"blah "inside quote" blahDL
            # gives a token ["blah "inside quote" blah]
            #
            ignoreQuotes: true,
            #
            # Set stripQuotes to true to
            # remove start and end quotes from tokens
            # So "blah blah" becomes [blah blah]
            #
            stripQuotes: true,
            ignores:    "",
            delimiter:  ["||","\r"]
        },
        variables:
        [
            #
            # Note that positions start at 1, and go up
            # rather than array index style counting from zero
            #
            { name: "Identifier",   position: 1 },
            { name: "Node",         position: 2 },
            { name: "Serial",       position: 3 },
            { name: "Manager",      position: 4 },
            { name: "Class",        position: 5 },
            { name: "Agent",        position: 6 },
            { name: "ProbeHostName",position: 7 },
            { name: "AlertGroup",   position: 8 },
            { name: "Severity",     position: 9 },
            { name: "Summary",      position: 10 },
            { name: "LastOccurrence",position: 11 },
            { name: "InternalLast", position: 12 }
        ],
        constants:
        {
            severity:
            {
                "CLEAR"         : 0,
                "INDETERMINATE" : 1,
                "WARNING"       : 2,
                "MINOR"         : 3,
                "MAJOR"         : 4,
                "CRITICAL"      : 5
            }
        },
        conversions:
        {
            sevConverter:
            {
                lookup: "severity",
                input:  "STRING",
                output: "INTEGER"
            },
            timeConverter:
            {
                timeFormat: "%D %T",
                input:      "STRING",
                output:     "INTEGER"
            }
        },
	    #---------------------------------------------
	    # Describe how parsed parameters get mapped
	    # to alert fields
	    #---------------------------------------------
	    mapping :
	    {
            catchAll: "overflow",
            rules:
            [
		        { name: "signature",rule:    	"$Identifier" },
		        { name: "source_id",rule:    	"$Node" },
		        { name: "external_id",rule:  	"$Serial" },
		        { name: "manager",rule:      	"$Manager" },
		        { name: "source",rule:       	"$Node" },
		        { name: "class",rule:        	"$Class" },
		        { name: "agent",rule:        	"$LamInstanceName" },
		        { name: "agent_location",rule:  "$ProbeHostName" },
		        { name: "type",rule:	        "$AlertGroup" },
		        { name: "severity",rule:	    "$Severity",        conversion: "sevConverter"  },
		        { name: "description",rule:	    "$Summary" },
		        { name: "agent_time",rule:	    "$InternalLast",    conversion: "timeConverter" }
            ]
	    },
        filter:
        {
            presend: "SocketLam.js"
        }

	}
}
